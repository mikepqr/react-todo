{"version":3,"sources":["index.js"],"names":["DEFAULT_TASKS","id","done","text","NewTaskEntry","props","handleChange","event","setState","taskText","target","value","handleSubmit","preventDefault","state","addTask","isTask","this","onSubmit","className","type","autofocus","onChange","React","Component","ClearDoneButton","clearDone","TaskListItem","defaultChecked","task","onChangeTaskIdDone","TaskList","items","tasks","map","onChangeTaskDone","Project","handleChangeTaskDone","taskId","idx","findIndex","maxId","length","Math","max","concat","filter","projectName","App","ReactDOM","render","document","getElementById"],"mappings":"sMAIMA,G,MAAgB,CACpB,CAAEC,GAAI,EAAGC,MAAM,EAAMC,KAAM,YAC3B,CAAEF,GAAI,EAAGC,MAAM,EAAOC,KAAM,cAGxBC,E,kDACJ,WAAYC,GAAQ,IAAD,8BACjB,cAAMA,IAMRC,aAAe,SAACC,GACd,EAAKC,SAAS,CACZC,SAAUF,EAAMG,OAAOC,SATR,EAanBC,aAAe,SAACL,GACdA,EAAMM,iBACsB,KAAxB,EAAKC,MAAML,WAGf,EAAKJ,MAAMU,QAAQ,EAAKD,MAAML,UAC9B,EAAKD,SAAS,CACZC,SAAU,OAlBZ,EAAKK,MAAQ,CACXL,SAAU,IAHK,E,qDAyBjB,IAAMO,EAAiC,KAAxBC,KAAKH,MAAML,SAC1B,OACE,uBAAMS,SAAUD,KAAKL,aAArB,UACE,uBACEO,UAAU,SACVC,KAAK,OACLC,UAAU,YACVV,MAAOM,KAAKH,MAAML,SAClBa,SAAUL,KAAKX,eAEjB,uBACEa,UAAW,qBAAuBH,EAAS,GAAK,iBAChDI,KAAK,SACLT,MAAM,oB,GAvCWY,IAAMC,WA8CjC,SAASC,EAAgBpB,GACvB,OACE,sBAAMa,SAAUb,EAAMqB,UAAtB,SACE,uBAAOP,UAAU,cAAcC,KAAK,SAAST,MAAM,iBAKzD,SAASgB,EAAatB,GACpB,OACE,6BACE,kCACE,uBACEuB,eAAgBvB,EAAMwB,KAAK3B,KAC3BoB,SAAUjB,EAAMyB,mBAChBV,KAAK,WACLD,UAAU,SAEZ,sBAAMA,UAAWd,EAAMwB,KAAK3B,KAAO,6BAA+B,GAAlE,SACGG,EAAMwB,KAAK1B,WATTE,EAAMwB,KAAK5B,IAgBxB,SAAS8B,EAAS1B,GAChB,IAAM2B,EAAQ3B,EAAM4B,MAAMC,KAAI,SAACL,GAAD,OAC5B,cAACF,EAAD,CACEE,KAAMA,EACNC,mBAAoB,kBAAMzB,EAAM8B,iBAAiBN,EAAK5B,UAG1D,OAAO,oBAAIkB,UAAU,iBAAd,SAAgCa,I,IAGnCI,E,kDACJ,WAAY/B,GAAQ,IAAD,8BACjB,cAAMA,IAORgC,qBAAuB,SAACC,GACtB,IAAML,EAAQ,EAAKnB,MAAMmB,MACnBM,EAAM,EAAKzB,MAAMmB,MAAMO,WAAU,SAACX,GAAD,OAAUA,EAAK5B,KAAOqC,KAC7DL,EAAMM,GAAKrC,MAAO+B,EAAMM,GAAKrC,KAC7B,EAAKM,SAAS,CACZyB,WAbe,EAiBnBlB,QAAU,SAACN,GACT,IAAMwB,EAAQ,EAAKnB,MAAMmB,MACnBQ,EAAQ,EAAK3B,MAAMmB,MAAMS,OAC3BC,KAAKC,IAAL,MAAAD,KAAI,YAAQ,EAAK7B,MAAMmB,MAAMC,KAAI,SAACL,GAAD,OAAUA,EAAK5B,QAChD,EACJ,EAAKO,SAAS,CAEZyB,MAAO,CAAC,CAAE/B,MAAM,EAAOC,KAAMM,EAAUR,GAAIwC,EAAQ,IAAKI,OAAOZ,MAxBhD,EA4BnBP,UAAY,SAACnB,GACXA,EAAMM,iBACN,EAAKL,SAAS,CACZyB,MAAO,EAAKnB,MAAMmB,MAAMa,QAAO,SAACjB,GAAD,OAAWA,EAAK3B,WA7BjD,EAAKY,MAAQ,CACXmB,MAAOjC,EACP+C,YAAa,WAJE,E,qDAoCjB,OACE,sBAAK5B,UAAU,YAAf,UACE,oBAAIA,UAAU,oBAAd,SAAmCF,KAAKH,MAAMiC,cAC9C,cAAC3C,EAAD,CAAcW,QAASE,KAAKF,UAC5B,cAACgB,EAAD,CACEE,MAAOhB,KAAKH,MAAMmB,MAClBE,iBAAkBlB,KAAKoB,uBAEzB,cAACZ,EAAD,CAAiBC,UAAWT,KAAKS,mB,GA7CnBH,IAAMC,WAmD5B,SAASwB,IACP,OAAO,cAACZ,EAAD,IAGTa,IAASC,OAAO,cAACF,EAAD,IAASG,SAASC,eAAe,W","file":"static/js/main.c5257744.chunk.js","sourcesContent":["import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./tailwind.css\";\n\nconst DEFAULT_TASKS = [\n  { id: 0, done: true, text: \"Buy milk\" },\n  { id: 1, done: false, text: \"Call mum\" },\n];\n\nclass NewTaskEntry extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      taskText: \"\",\n    };\n  }\n\n  handleChange = (event) => {\n    this.setState({\n      taskText: event.target.value,\n    });\n  };\n\n  handleSubmit = (event) => {\n    event.preventDefault();\n    if (this.state.taskText === \"\") {\n      return;\n    }\n    this.props.addTask(this.state.taskText);\n    this.setState({\n      taskText: \"\",\n    });\n  };\n\n  render() {\n    const isTask = this.state.taskText !== \"\";\n    return (\n      <form onSubmit={this.handleSubmit}>\n        <input\n          className=\"border\"\n          type=\"text\"\n          autofocus=\"autofocus\"\n          value={this.state.taskText}\n          onChange={this.handleChange}\n        />\n        <input\n          className={\"border mx-2 px-2 \" + (isTask ? \"\" : \"text-gray-400\")}\n          type=\"submit\"\n          value=\"Add task\"\n        />\n      </form>\n    );\n  }\n}\n\nfunction ClearDoneButton(props) {\n  return (\n    <form onSubmit={props.clearDone}>\n      <input className=\"border px-2\" type=\"submit\" value=\"Clear done\" />\n    </form>\n  );\n}\n\nfunction TaskListItem(props) {\n  return (\n    <li key={props.task.id}>\n      <label>\n        <input\n          defaultChecked={props.task.done}\n          onChange={props.onChangeTaskIdDone}\n          type=\"checkbox\"\n          className=\"mr-2\"\n        />\n        <span className={props.task.done ? \"line-through text-gray-400\" : \"\"}>\n          {props.task.text}\n        </span>\n      </label>\n    </li>\n  );\n}\n\nfunction TaskList(props) {\n  const items = props.tasks.map((task) => (\n    <TaskListItem\n      task={task}\n      onChangeTaskIdDone={() => props.onChangeTaskDone(task.id)}\n    />\n  ));\n  return <ul className=\"list-none my-2\">{items}</ul>;\n}\n\nclass Project extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      tasks: DEFAULT_TASKS,\n      projectName: \"Project\",\n    };\n  }\n\n  handleChangeTaskDone = (taskId) => {\n    const tasks = this.state.tasks;\n    const idx = this.state.tasks.findIndex((task) => task.id === taskId);\n    tasks[idx].done = tasks[idx].done ? false : true;\n    this.setState({\n      tasks,\n    });\n  };\n\n  addTask = (taskText) => {\n    const tasks = this.state.tasks;\n    const maxId = this.state.tasks.length\n      ? Math.max(...this.state.tasks.map((task) => task.id))\n      : 0;\n    this.setState({\n      // put new task at start of list\n      tasks: [{ done: false, text: taskText, id: maxId + 1 }].concat(tasks),\n    });\n  };\n\n  clearDone = (event) => {\n    event.preventDefault();\n    this.setState({\n      tasks: this.state.tasks.filter((task) => !task.done),\n    });\n  };\n\n  render() {\n    return (\n      <div className=\"px-5 py-5\">\n        <h1 className=\"font-bold text-lg\">{this.state.projectName}</h1>\n        <NewTaskEntry addTask={this.addTask} />\n        <TaskList\n          tasks={this.state.tasks}\n          onChangeTaskDone={this.handleChangeTaskDone}\n        />\n        <ClearDoneButton clearDone={this.clearDone} />\n      </div>\n    );\n  }\n}\n\nfunction App() {\n  return <Project />;\n}\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n"],"sourceRoot":""}